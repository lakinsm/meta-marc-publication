library(ggplot2)
library(RColorBrewer)
library(data.table)
library(scales)
library(arm)
setwd("/mnt/manuscripts/CommunicationsBiology_HMM_Publication/meta-marc-publication/")
rdata <- data.table(read.csv('analytic_data/mismatch_analytic_data.csv',
col.names=c('TestSet', 'SampleName', 'DantasSampleSet', 'TruthLabel', 'Pipeline', 'HMMGroup',
'AnnotationLevel', 'NodeName', 'MinorAlleleCount', 'ReadCount')))
rdata_class <- rdata[!is.na(NodeName) & AnnotationLevel == 'Class' & (HMMGroup != 'groupII' | is.na(HMMGroup))]
rdata_class[, AvgMinorAlleleCount := ( MinorAlleleCount / ReadCount )]
df1 <- data.frame(a = c(1, 1, 2, 2), b = c(48, 50, 50, 48))
df2 <- data.frame(a = c(2, 2, 3, 3), b = c(52, 54, 54, 52))
df3 <- data.frame(a = c(2, 2, 4, 4), b = c(56, 58, 58, 56))
translpipe <- c('Alignment'='Alignment', 'MMARC'='Meta-MARC HTS Reads', 'MMARC-assembled'='Meta-MARC Assembled', 'Resfams'='Resfams')
rdata_class_plot <- rdata_class
rdata_class_plot$Pipeline <- translpipe[rdata_class_plot$Pipeline]
g <- ggplot(rdata_class_plot, aes(x=Pipeline, y=AvgMinorAlleleCount)) + geom_boxplot(outlier.shape = NA) +
#geom_jitter(width=0.3, height=0, size=1, alpha=0.1) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x=element_text(size=20),
strip.text.y=element_text(size=20, angle=180),
axis.text.y=element_text(size=22),
axis.text.x=element_text(size=22, angle=45, hjust=1),
axis.title.x=element_text(size=26),
axis.title.y=element_text(size=26),
panel.margin=unit(0.1, "lines"),
plot.title=element_text(size=30, hjust=0.5),
legend.text=element_text(size=18),
legend.title=element_blank()) +
xlab('\nMethod') + ylab('Average Non-major Allele Count per Read\n') +
ylim(c(-2, 60)) +
geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 51, label = "***", size = 8) +
geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 55, label = "***", size = 8) +
geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 3, y = 59, label = "***", size = 8)
print(g + ggtitle(paste('Average Read-wise Genetic Variation by Method\n')))
library(ggplot2)
library(RColorBrewer)
library(data.table)
library(scales)
library(arm)
setwd("/mnt/manuscripts/CommunicationsBiology_HMM_Publication/meta-marc-publication/")
rdata <- data.table(read.csv('analytic_data/mismatch_analytic_data.csv',
col.names=c('TestSet', 'SampleName', 'DantasSampleSet', 'TruthLabel', 'Pipeline', 'HMMGroup',
'AnnotationLevel', 'NodeName', 'MinorAlleleCount', 'ReadCount')))
rdata_class <- rdata[!is.na(NodeName) & AnnotationLevel == 'Class' & (HMMGroup != 'groupII' | is.na(HMMGroup))]
rdata_class[, AvgMinorAlleleCount := ( MinorAlleleCount / ReadCount )]
df1 <- data.frame(a = c(1, 1, 3, 3), b = c(48, 50, 50, 48))
df2 <- data.frame(a = c(2, 2, 3, 3), b = c(52, 54, 54, 52))
df3 <- data.frame(a = c(3, 3, 4, 4), b = c(56, 58, 58, 56))
translpipe <- c('Alignment'='Alignment', 'MMARC'='Meta-MARC HTS Reads', 'MMARC-assembled'='Meta-MARC Assembled', 'Resfams'='Resfams')
rdata_class_plot <- rdata_class
rdata_class_plot$Pipeline <- translpipe[rdata_class_plot$Pipeline]
g <- ggplot(rdata_class_plot, aes(x=Pipeline, y=AvgMinorAlleleCount)) + geom_boxplot(outlier.shape = NA) +
#geom_jitter(width=0.3, height=0, size=1, alpha=0.1) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x=element_text(size=20),
strip.text.y=element_text(size=20, angle=180),
axis.text.y=element_text(size=22),
axis.text.x=element_text(size=22, angle=45, hjust=1),
axis.title.x=element_text(size=26),
axis.title.y=element_text(size=26),
panel.margin=unit(0.1, "lines"),
plot.title=element_text(size=30, hjust=0.5),
legend.text=element_text(size=18),
legend.title=element_blank()) +
xlab('\nMethod') + ylab('Average Non-major Allele Count per Read\n') +
ylim(c(-2, 60)) +
geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 51, label = "***", size = 8) +
geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 55, label = "***", size = 8) +
geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 3, y = 59, label = "***", size = 8)
print(g + ggtitle(paste('Average Read-wise Genetic Variation by Method\n')))
g <- ggplot(rdata_class_plot, aes(x=Pipeline, y=AvgMinorAlleleCount)) + geom_boxplot(outlier.shape = NA) +
#geom_jitter(width=0.3, height=0, size=1, alpha=0.1) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x=element_text(size=20),
strip.text.y=element_text(size=20, angle=180),
axis.text.y=element_text(size=22),
axis.text.x=element_text(size=22, angle=45, hjust=1),
axis.title.x=element_text(size=26),
axis.title.y=element_text(size=26),
panel.margin=unit(0.1, "lines"),
plot.title=element_text(size=30, hjust=0.5),
legend.text=element_text(size=18),
legend.title=element_blank()) +
xlab('\nMethod') + ylab('Average Non-major Allele Count per Read\n') +
ylim(c(-2, 60)) +
geom_line(data = df1, aes(x = a, y = b)) + annotate("text", x = 1.5, y = 51, label = "***", size = 8) +
geom_line(data = df2, aes(x = a, y = b)) + annotate("text", x = 2.5, y = 55, label = "***", size = 8) +
geom_line(data = df3, aes(x = a, y = b)) + annotate("text", x = 3.5, y = 59, label = "***", size = 8)
print(g + ggtitle(paste('Average Read-wise Genetic Variation by Method\n')))
source('/mnt/manuscripts/CommunicationsBiology_HMM_Publication/meta-marc-publication/scripts/mismatch_regression.R')
print(wilcox.test(rcast2$MMARC, rcast2[['MMARC-assembled']])$p.value * 3)
print(wilcox.test(rcast2$MMARC, rcast2[['Resfams']])$p.value * 3)
print(wilcox.test(rcast2$MMARC, rcast2[['Alignment']])$p.value * 3)
sim_data <- data.table(read.csv('analytic_data/mmarc_publication_simulation_results.csv'))
class_sim_data <- sim_data[Level == 'Classes']
class_sim_data$Level <- gsub('Classes', 'Class', class_sim_data$Level)
colnames(class_sim_data) <- c('NodeName', 'AnnotationLevel', 'TruePositives', 'FalsePositives', 'FalseNegatives',
'TrueNegatives', 'Sensitivity', 'Specificity')
class_sim_data$NodeName <- gsub('MLS', 'Macrolides Lincosamides and Streptogramins', class_sim_data$NodeName)
class_sim_data <- class_sim_data[, .SD, .SDcols=!c('AnnotationLevel', 'Specificity', 'Sensitivity')]
setkey(class_sim_data, NodeName)
class_sim_data[, Sensitivity := ( 100 * TruePositives / (TruePositives + FalseNegatives) )]
class_sim_data[, Specificity := ( 100 * TrueNegatives / (TrueNegatives + FalsePositives) )]
class_sim_data
summary(class_sim_data$Sensitivity)
sd(class_sim_data$Sensitivity)
sd(class_sim_data$Specificity)
shiny::runApp('~/Documents/morley_bioinformatics/amrplusplus-shiny/amrplusplus-shiny')
temp <- data.table(read.csv('/mnt/test/shiny/AMR_analytic_matrix.csv'))
temp
colSums(temp)
source('~/Documents/morley_bioinformatics/amrplusplus-shiny/amrplusplus-shiny/dataIO.R')
temp <- load_amr_counts('/mnt/test/shiny/AMR_analytic_matrix.csv')
temp
colSums(MRcounts(test))
colSums(MRcounts(temp))
atemp <- load_amr_annotations('/mnt/test/shiny/megares_annotations_v1.01.csv')
atemp
load_metadata()
mtemp <- load_metadata('/mnt/test/shiny/FC original bait meta.csv')
mtemp
colSums(MRcounts(temp))
source('~/Documents/morley_bioinformatics/amrplusplus-shiny/amrplusplus-shiny/data_processing.R')
CSS_normalize_and_extract(filtering_quantile = 0.15, amr_MRexp = temp) -> out
cumNorm(temp)
temp
MRcounts(temp)
colSums(MRcounts(temp))
cumNorm(temp)
apply(MRcounts(temp), 2, function(x) {x > 0})
apply(MRcounts(temp), 2, function(x) {sum(x > 0)})
apply(MRcounts(temp), 2, function(x) {sum(x > 0)}) > 1
temp <- temp[, apply(MRcounts(temp), 2, function(x) {sum(x > 0)}) > 1]
temp
runApp('~/Documents/morley_bioinformatics/amrplusplus-shiny/amrplusplus-shiny')
